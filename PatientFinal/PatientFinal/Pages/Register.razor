@page "/Register"
@inject HttpClient Http
@using PatientFinal.DTOs

<h3>Register</h3>

<input placeholder="Name" @bind="Name"></input>
<input placeholder="Surname" @bind="Surname"></input>
<input placeholder="CPR" @bind="CPR_No"></input>
<input placeholder="Phone number" @bind="Phone"></input>
<input placeholder="Email" @bind="Email"></input>
<input placeholder="Password" type="password" @bind="Password"></input>

@if (!string.IsNullOrEmpty(serverResponse))
{
    <p>@serverResponse</p>
}

@if (!string.IsNullOrEmpty(serverResponse2))
{
<p>@serverResponse2</p>
}


<button @onclick="RegisterPatient">Register</button>

@code {
    private string Name;
    private string Surname;
    private string Password;
    private string CPR_No;
    private string Phone;
    private string Email;
    private string serverResponse;
    private string serverResponse2;

    private async Task RegisterPatient()
    {
        // Validate inputs before creating DTO
        if (string.IsNullOrWhiteSpace(Name))
        {
            serverResponse = "Name is required";
            return;
        }

        if (string.IsNullOrWhiteSpace(Surname))
        {
            serverResponse = "Surname is required";
            return;
        }

        if (string.IsNullOrWhiteSpace(Phone))
        {
            serverResponse = "Phone number is required";
            return;
        }

        if (string.IsNullOrWhiteSpace(Email) || !Email.Contains("@"))
        {
            serverResponse = "Valid email is required";
            return;
        }

        if (string.IsNullOrWhiteSpace(Password) || Password.Length < 5)
        {
            serverResponse = "Password must be at least 5 characters";
            return;
        }

        var registerDto = new
        {
            name = Name,
            surname = Surname,
            email = Email,
            phone = Phone,
            password = Password,
            cprno = CPR_No
        };
        
        try
        {
            HttpResponseMessage responseMessage = await Http.PostAsJsonAsync(
                "http://localhost:8081/Demo/register", registerDto);
            
            if (responseMessage.IsSuccessStatusCode)
            {
                serverResponse = "Patient registered successfully " + registerDto.cprno;
            }
            else
            {
                serverResponse = await responseMessage.Content.ReadAsStringAsync();
            }
        }
        catch (Exception e)
        {
            serverResponse = $"Registration failed: {e.Message}";
            Console.WriteLine(e);
        }
    }
}
