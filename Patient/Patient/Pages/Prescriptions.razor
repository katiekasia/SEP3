@page "/Prescriptions"
@using System.Security.Claims
@using Patient.DTOs
@using Patient.Services


@inject AuthenticationStateProvider AuthProvider;
@inject IPrescriptionService PrescriptionService;


<link href="css/Prescription.css" rel="stylesheet"/>

<h3>Prescriptions</h3>
<PageTitle>Prescriptions</PageTitle>

<AuthorizeView>
    <NotAuthorized>
        <p>Please log in to see your prescriptions :)</p>
    </NotAuthorized>
    <Authorized>
        <div class="prescription-container">
            <h3>Your Prescriptions</h3>

            @if (loading)
            {
                <p>Loading prescriptions...</p>
            }
            else if (prescriptions == null)
            {
                <p>No prescriptions found</p>
            }
            else
            {
                @foreach (var prescription in prescriptions)
                {
                    <div class="prescription-card">
                        <h4>Diagnosis: @prescription.diagnosis</h4>
                        <p><strong>Medication:</strong> @prescription.medication</p>
                        <p><strong>Recommendations:</strong> @prescription.recommendations</p>
                        <p><strong>Date:</strong> @prescription.date</p>
                        <p><strong>Time:</strong> @prescription.time</p>
                        <p><strong>Doctor:</strong>@prescription.doctorname @prescription.doctorsurname</p>

                    </div>
                }
            }
        </div>
    </Authorized>
</AuthorizeView>

@code {
    private List<GetPrescriptionsDto> prescriptions;
    private bool loading = true;
    private string errorMessage;
    private string cpr;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var authState = await AuthProvider.GetAuthenticationStateAsync();
            var user = authState.User;
            this.cpr = user?.FindFirst(ClaimTypes.NameIdentifier)?.Value;

            if (string.IsNullOrEmpty(this.cpr))
            {
                errorMessage = "Couldn't retrieve your CPR. Please ensure you're logged in.";
                return;
            }

            prescriptions = await PrescriptionService.GetPrescriptionsByPatientCpr(cpr) ?? new List<GetPrescriptionsDto>();
        }
        catch (Exception e)
        {
            errorMessage = "An error occurred while loading prescriptions.";
            Console.WriteLine($"Error: {e.Message}");
        }
        finally
        {
            loading = false;
        }
    }
}


