@page "/"
@inject HttpClient Http
@inject AuthenticationStateProvider LoginService
@inject NavigationManager navMgr
@using System.Text.Json
@using Microsoft.AspNetCore.Components.Authorization
@using Patient.Auth


<link href="css/Login.css" rel="stylesheet" />

<div class="login-wrapper">
    <div class="login-box">
        <h3>Login</h3>
        <AuthorizeView>
            <NotAuthorized>
                <div class="input-container">
                    <input placeholder="CPR-Number" @bind="cprno" class="input-field" />
                    <input placeholder="Password" type="password" @bind="passwordinput" class="input-field" />
                </div>
                @if (!string.IsNullOrEmpty(serverResponse))
                {
                    <p class="error-message">@serverResponse</p>
                }
                <button @onclick="LoginPatient" class="login-btn">Login</button>
                <p class="register-link">
                    Don't have an account? <a href="/Register">Register here</a>
                </p>
            </NotAuthorized>
            <Authorized>
                <h3>Hello, @context.User.Identity.Name</h3>
            </Authorized>
        </AuthorizeView>
    </div>
</div>

@code {
    private string cprno;
    private string passwordinput;
    private string serverResponse;
    private bool isLoading;

    private async Task LoginPatient()
    {
        if (string.IsNullOrWhiteSpace(cprno) || string.IsNullOrWhiteSpace(passwordinput))
        {
            serverResponse = "Both CPR and password are required";
            return;
        }

        try
        {
            await ((SimpleAuthProvider)LoginService).Login(cprno, passwordinput);
            navMgr.NavigateTo("/");

        }
        catch (HttpRequestException httpEx)
        {
            // Check for HTTP status code
            if (httpEx.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                serverResponse = "Login failed: User not found. Check your CPR.";
            }
            else if (httpEx.StatusCode == System.Net.HttpStatusCode.InternalServerError)
            {
                serverResponse = "Login failed: Server error. Please try again later.";
            }
            else
            {
                serverResponse = "Login failed: An unexpected error occurred.";
            }
        }
        catch (Exception e)
        {
            // Catch any other general exceptions
            serverResponse = "Login failed: An error occurred. Please check your credentials.";
        }
    }

}