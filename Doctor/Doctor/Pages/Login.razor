@page "/"
@using Doctor.DTOs
@using Doctor.Pages.Auth
@using Doctor.Services
@inject AuthenticationStateProvider AuthProvider
@inject HttpClient Http
@inject AuthenticationStateProvider LoginService
@inject NavigationManager navMgr

<link href="css/Login.css" rel="stylesheet" />

<div class="login-wrapper">
    <div class="login-box">
        <h3>Doctor Login</h3>
        <AuthorizeView>
            <NotAuthorized>
                <div class="input-container">
                    <p>Enter your ID:</p>
                    <input @bind="id" placeholder="Enter your ID" class="input-field" />
                    <p>Enter your Password:</p>
                    <input @bind="password" type="password" placeholder="Enter your password" class="input-field" />
                </div>

                @if (!string.IsNullOrEmpty(responseMessage))
                {
                <p class="error-message">@responseMessage</p>
                }
                <button @onclick="LoginDoctor" class="login-btn">Login</button>
            </NotAuthorized>
            <Authorized>
                <h3>Logged in! </h3>
            </Authorized>
        </AuthorizeView>
    </div>
</div>

@code {
    private string id;
    private string password;
    private string responseMessage;

    private async Task LoginDoctor()
    {
        if (string.IsNullOrWhiteSpace(id) || string.IsNullOrWhiteSpace(password))
        {
            responseMessage = "Both ID and Password are required";
            return;
        }

        try
        {
            await ((SimpleAuthProvider)LoginService).Login(id, password);
            navMgr.NavigateTo("/Appointments");
            
        }
        catch (HttpRequestException httpEx)
        {
            // Check for HTTP status code
            if (httpEx.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                responseMessage = "Login failed: User not found. Check your CPR.";
            }
            else if (httpEx.StatusCode == System.Net.HttpStatusCode.InternalServerError)
            {
                responseMessage = "Login failed: Server error. Please try again later.";
            }
            else
            {
                responseMessage = "Login failed: An unexpected error occurred.";
            }
        }
        catch (Exception e)
        {
            // Catch any other general exceptions
            responseMessage = "Login failed: An error occurred. Please check your credentials.";
        }
    }

}