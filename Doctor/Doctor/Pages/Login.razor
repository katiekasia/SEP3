@page "/"
@using Doctor.DTOs
@using Doctor.Pages.Auth
@using Doctor.Services
@inject AuthenticationStateProvider AuthProvider
@inject HttpClient Http
@inject AuthenticationStateProvider LoginService
@inject NavigationManager navMgr

<h3>Doctor Login</h3>

<AuthorizeView>
    <NotAuthorized>
        <p>Enter your ID:</p>
        <input @bind="id" placeholder="Enter your ID"/>
        <p>Enter your Password:</p>
        <input @bind="password" type="password" placeholder="Enter your password"/>
        <button @onclick="LoginDoctor">Login</button>

        @if (!string.IsNullOrEmpty(responseMessage))
        {
        <p>Server Response: @responseMessage</p>
        }

    </NotAuthorized>

    <Authorized>
        logged in! :)
    </Authorized>
</AuthorizeView>
@code {
    private string id;
    private string password;
    private string responseMessage;

    private async Task LoginDoctor()
    {
        if (string.IsNullOrWhiteSpace(id) || string.IsNullOrWhiteSpace(password))
        {
            responseMessage = "Both ID and Password are required";
            return;
        }

        try
        {
            await ((SimpleAuthProvider)LoginService).Login(id, password);
            navMgr.NavigateTo("/");
            
        }
        catch (Exception e)
        {
            Console.WriteLine($"Inner Error: {e.InnerException.Message}");
            responseMessage = $"Login failed: {e.Message} ";
        }
    }

}